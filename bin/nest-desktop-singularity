#!/bin/bash
# nest-desktop-singularity

FAKEROOT=false
INSTANCES="nest-desktop nest-simulator"

usage() {
  echo "NEST Desktop Singularity"
  echo "------------------------"
  echo "Usage: nest-desktop-singularity build|list|restart|start|status|stop [-f] [nest-desktop|nest-simulator]"
  echo ""
  echo "Commands:"
  echo "  build       build singularity containers for instances"
  echo "  list        list instances"
  echo "  restart     restart (i.e. stop and start) instances"
  echo "  status      display the status of instances"
  echo "  start       start instances"
  echo "  stop        stop instances"
  echo
  echo "Options:"
  echo "  -f          use fakeroot for building" >&2; exit 1

}

_build_fakeroot() {
  singularity build --fakeroot images/$1.sif recipes/$1.def
}

_build_root() {
  sudo singularity build images/$1.sif recipes/$1.def
}

build() {
  if [[ FAKEROOT ]]; then
    for INSTANCE in $INSTANCES ; do
      _build_fakeroot $INSTANCE
    done
  else
    for INSTANCE in $INSTANCES ; do
      _build_root $INSTANCE
    done
  fi
}

list() {
  for INSTANCE in $INSTANCES ; do
    echo $INSTANCE
  done
}

_start() {
  singularity instance start images/$1.sif $1
}

start() {
  for INSTANCE in $INSTANCES ; do
    _start $INSTANCE
  done
}

status() {
  singularity instance list
}

_stop() {
  singularity instance stop $1
}

stop() {
  for INSTANCE in $INSTANCES ; do
    _stop $INSTANCE
  done
}

CMD=$1; shift
while getopts "f:" flag; do
  case ${flag} in
    f) FAKEROOT=true ;;
  esac
done

for arg in "$@"; do
  case ${arg} in
    nest-desktop) INSTANCES='nest-desktop' ;;
    nest-simulator) INSTANCES='nest-simulator' ;;
  esac
done

case "$CMD" in
  build)   build ;;
  list)    list ;;
  restart) stop; sleep .5; start ;;
  start)   start ;;
  status)  status ;;
  stop)    stop ;;
  *)       usage ;;
esac
